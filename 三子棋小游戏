#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include "game.h"

void init_board(char board[ROW][COL],int row,int col)
{
	for(int i=0;i<row;i++)
	{
		for(int j=0;j<col;j++)
		{
			board[i][j]=' ';
		}
	}
}

void print_board(char board[ROW][COL],int row,int col)
{
	for(int i=0;i<row;i++)
	{
		for(int j=0;j<col;j++)
		{
			printf(" %c ",board[i][j]);
			if(j<col-1)
				printf("|");
		}
		printf("\n");
		if(i<row-1)
		{
			for(int j=0;j<col;j++)
			{
				printf("---");
				if(j!=col-1)
					printf("|");
			}
		}
		printf("\n");
		
	}
}

void player_move(char board[ROW][COL],int row,int col)
{
	while(1)
	{
		printf("玩家下棋\n");
		printf("请输入要下棋的坐标:> ");
		int x,y;
		scanf("%d %d",&x,&y);
		if((x>=1 && x<=row )|| (y>=1 && y<=col))
		{
			if(board[x-1][y-1]==' ')
			{
				board[x-1][y-1]='*';
				break;
			}
			else
			{
				printf("该坐标被占用，请重新输入\n");	
			}
		}
		else
		{
			printf("坐标非法，请输入输入坐标\n");	
		}		
	}
	print_board(board,ROW,COL);
}

void computer_move(char board[ROW][COL],int row,int col)
{
	printf("电脑下棋:\n");
	while(1)
	{
		int x=rand()%row;
		int y=rand()%col;
		if(board[x][y]==' ')
		{
			board[x][y]='#';
			break;
		}
	}
	print_board(board,ROW,COL);
}

//判断输赢
char is_win(char board[ROW][COL],int row,int col)
{
	for(int i=0;i<row;i++)	///判断三行相等
	{
		if(board[i][0] && board[i][1]==board[i][2] && board[i][0]!=' ')
		{
			return board[i][0];
		}
	}
	for(int j=0;j<col;j++)	//判断三列相等
	{
		if(board[0][j] && board[1][j]==board[2][j] && board[0][j]!=' ')
		{
			return board[0][j];
		}
	}	
	if(board[0][0] == board[1][1] && board[1][1] == board[2][2])
	{
		return board[1][1];
	}
	else if (board[2][0] == board[1][1] && board[1][1] == board[0][2])
	{
		return board[1][1];
	}
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < row; j++)
		{
			if (board[i][j] == ' ') 
				return 'C';    //有空的返回c，表示继续
		}
	}
	return 'Q';          	
}
